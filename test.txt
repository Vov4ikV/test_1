
t.student@1004-10 MINGW64 ~
$ cd desktop/git_test

t.student@1004-10 MINGW64 ~/desktop/git_test
$ git init
Initialized empty Git repository in C:/Users/t.student/Desktop/git_test/.git/

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git remote add origin https://github.com/redgooava/test1.git

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        1.py
        password.txt

nothing added to commit but untracked files present (use "git add" to track)

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        1.py

nothing added to commit but untracked files present (use "git add" to track)

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git add .

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   1.py


t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit -m 'first commit'
[master (root-commit) 04cf95d] first commit
 Committer: Test Student <t.student@itstep.local>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 2 insertions(+)
 create mode 100644 1.py

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git config --global user.email 'Vov4ikV'

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git config --global user.email 'vova.derkach.89@mail.ru'

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ ^C

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit -m 'first commit'
On branch master
nothing to commit, working tree clean

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
nothing to commit, working tree clean

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git push origin master
remote: Permission to redgooava/test1.git denied to Vov4ikV.
fatal: unable to access 'https://github.com/redgooava/test1.git/': The requested URL returned error: 403

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ ^C

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
nothing to commit, working tree clean

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit -m 'first commit'
On branch master
nothing to commit, working tree clean

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git push origin master
remote: Permission to redgooava/test1.git denied to Vov4ikV.
fatal: unable to access 'https://github.com/redgooava/test1.git/': The requested URL returned error: 403

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git remote add origin https://github.com/Vov4ikV/test.git
error: remote origin already exists.

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ ^C

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git remote add origin https://github.com/Vov4ikV/test.git
error: remote origin already exists.

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git remote -v
origin  https://github.com/redgooava/test1.git (fetch)
origin  https://github.com/redgooava/test1.git (push)

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git remote set-url origin https://github.com/Vov4ikV/test.git

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git remote -v
origin  https://github.com/Vov4ikV/test.git (fetch)
origin  https://github.com/Vov4ikV/test.git (push)

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
nothing to commit, working tree clean

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit -m 'first commit'
On branch master
nothing to commit, working tree clean

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git push origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 241 bytes | 241.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Vov4ikV/test.git
 * [new branch]      master -> master

t.student@1004-10 MINGW64 ~/desktop/git_test (master)



Добавление второго файла:

t.student@1004-10 MINGW64 ~
$ cd desktop

t.student@1004-10 MINGW64 ~/desktop
$ cd gittest
bash: cd: gittest: No such file or directory

t.student@1004-10 MINGW64 ~/desktop
$ cd git_test

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        2.py

nothing added to commit but untracked files present (use "git add" to track)

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git add 2.py

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit -m 'second commit'
[master a44e379] second commit
 1 file changed, 3 insertions(+)
 create mode 100644 2.py

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
nothing to commit, working tree clean

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git push origin master
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 311 bytes | 311.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Vov4ikV/test.git
   04cf95d..a44e379  master -> master

t.student@1004-10 MINGW64 ~/desktop/git_test (master)


Удаление файла с git

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git rm 2.py
rm '2.py'

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    2.py


t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit -m 'delete 2.py'
[master 61962aa] delete 2.py
 1 file changed, 3 deletions(-)
 delete mode 100644 2.py

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git push origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 4 threads
Compressing objects: 100% (1/1), done.
Writing objects: 100% (2/2), 234 bytes | 234.00 KiB/s, done.
Total 2 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Vov4ikV/test.git
   a44e379..61962aa  master -> master
g
t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
nothing to commit, working tree clean

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$


Весь файл
t.student@1004-10 MINGW64 ~
$ cd desktop

t.student@1004-10 MINGW64 ~/desktop
$ cd gittest
bash: cd: gittest: No such file or directory

t.student@1004-10 MINGW64 ~/desktop
$ cd git_test

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        2.py

nothing added to commit but untracked files present (use "git add" to track)

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git add 2.py

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit -m 'second commit'
[master a44e379] second commit
 1 file changed, 3 insertions(+)
 create mode 100644 2.py

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
nothing to commit, working tree clean

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git push origin master
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 311 bytes | 311.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Vov4ikV/test.git
   04cf95d..a44e379  master -> master

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ ^C

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git rm
fatal: No pathspec was given. Which files should I remove?

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git rm 2.py
rm '2.py'

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    2.py


t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit -m 'delete 2.py'
[master 61962aa] delete 2.py
 1 file changed, 3 deletions(-)
 delete mode 100644 2.py

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git push origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 4 threads
Compressing objects: 100% (1/1), done.
Writing objects: 100% (2/2), 234 bytes | 234.00 KiB/s, done.
Total 2 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Vov4ikV/test.git
   a44e379..61962aa  master -> master
g
t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
nothing to commit, working tree clean

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git add hello.py

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   hello.py


t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit -m 'commit 3 file'
[master cc81451] commit 3 file
 1 file changed, 1 insertion(+)
 create mode 100644 hello.py

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git push origin master
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 291 bytes | 291.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Vov4ikV/test.git
   61962aa..cc81451  master -> master

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    hello.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hello_world.py

no changes added to commit (use "git add" and/or "git commit -a")

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git add hellow_world
fatal: pathspec 'hellow_world' did not match any files

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    hello.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hello_world.py

no changes added to commit (use "git add" and/or "git commit -a")

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit -m 'rename'
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    hello.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hello_world.py

no changes added to commit (use "git add" and/or "git commit -a")

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git push origin master
gEverything up-to-date
i
t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    hello.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hello_world.py

no changes added to commit (use "git add" and/or "git commit -a")

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git add hello_world.py

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   hello_world.py

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    hello.py


t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit 'delete'
error: pathspec 'delete' did not match any file(s) known to git

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   hello_world.py

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    hello.py


t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git mv hello_world.py hello_hello

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   hello_hello

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    hello.py


t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git mv hello.py hello_world
fatal: bad source, source=hello.py, destination=hello_world

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   hello_hello

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    hello.py


t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   hello_hello

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    hello.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        case1/


t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git add .

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   case1/12.txt
        new file:   case1/gg.txt
        new file:   case1/hh.txt
        renamed:    hello.py -> hello_hello


t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git commit -m 'create case'
[master a37e716] create case
 4 files changed, 3 insertions(+)
 create mode 100644 case1/12.txt
 create mode 100644 case1/gg.txt
 create mode 100644 case1/hh.txt
 rename hello.py => hello_hello (100%)

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git status
On branch master
nothing to commit, working tree clean

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git push origin master
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (6/6), 432 bytes | 432.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Vov4ikV/test.git
   cc81451..a37e716  master -> master

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git log
commit a37e716e77aef9adc66cae9923a4054ca724b3bf (HEAD -> master, origin/master)
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:40:17 2023 +0300

    create case

commit cc81451891fc7577041acb0cc40a5cd676c477d0
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:21:16 2023 +0300

    commit 3 file

commit 61962aa147d18e1dae856c641dee4a55a5fe5cc4
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:10:16 2023 +0300

    delete 2.py

commit a44e379e4ea6d62660242dbeb4f2f42d5df7daa6
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 20:59:20 2023 +0300

    second commit
:...skipping...
commit a37e716e77aef9adc66cae9923a4054ca724b3bf (HEAD -> master, origin/master)
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:40:17 2023 +0300

    create case

commit cc81451891fc7577041acb0cc40a5cd676c477d0
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:21:16 2023 +0300

    commit 3 file

commit 61962aa147d18e1dae856c641dee4a55a5fe5cc4
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:10:16 2023 +0300

    delete 2.py

commit a44e379e4ea6d62660242dbeb4f2f42d5df7daa6
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 20:59:20 2023 +0300

    second commit

commit 04cf95d956e6139c3f2f8822a7ffb4e422d0da5a
Author: Test Student <t.student@itstep.local>
Date:   Thu Feb 16 20:10:51 2023 +0300

    first commit
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
(END)...skipping...
commit a37e716e77aef9adc66cae9923a4054ca724b3bf (HEAD -> master, origin/master)
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:40:17 2023 +0300

    create case

commit cc81451891fc7577041acb0cc40a5cd676c477d0
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:21:16 2023 +0300

    commit 3 file

commit 61962aa147d18e1dae856c641dee4a55a5fe5cc4
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:10:16 2023 +0300

    delete 2.py

commit a44e379e4ea6d62660242dbeb4f2f42d5df7daa6
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 20:59:20 2023 +0300

    second commit

commit 04cf95d956e6139c3f2f8822a7ffb4e422d0da5a
Author: Test Student <t.student@itstep.local>
Date:   Thu Feb 16 20:10:51 2023 +0300

    first commit
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
(END)
commit a37e716e77aef9adc66cae9923a4054ca724b3bf (HEAD -> master, origin/master)
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:40:17 2023 +0300

    create case

commit cc81451891fc7577041acb0cc40a5cd676c477d0
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:21:16 2023 +0300

    commit 3 file

commit 61962aa147d18e1dae856c641dee4a55a5fe5cc4
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 21:10:16 2023 +0300

    delete 2.py

commit a44e379e4ea6d62660242dbeb4f2f42d5df7daa6
Author: Test Student <vova.derkach.89@mail.ru>
Date:   Thu Feb 16 20:59:20 2023 +0300

    second commit

commit 04cf95d956e6139c3f2f8822a7ffb4e422d0da5a
Author: Test Student <t.student@itstep.local>
Date:   Thu Feb 16 20:10:51 2023 +0300

    first commit
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
(END)

q + enter

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$
t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git log --oneline
a37e716 (HEAD -> master, origin/master) create case
cc81451 commit 3 file
61962aa delete 2.py
a44e379 second commit
04cf95d first commit

t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$


Для веток
t.student@1004-10 MINGW64 ~/desktop/git_test (master)
$ git log master --oneline
a37e716 (HEAD -> master, origin/master) create case
cc81451 commit 3 file
61962aa delete 2.py
a44e379 second commit
04cf95d first commit

t.student@1004-10 MINGW64 ~/desktop/git_test (master)


t.student@1004-10 MINGW64 ~/desktop/git_test (master)